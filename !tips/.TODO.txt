
Hot TO-DOs
  replace ||||| in outputes by the new line.

Code down a victim branches' support.
  Any side may move victim branches to any commit.
  It uses a last win strategy.
    git rev-list remotes/orig_1_client_co/common@conflicting remotes/orig_2_vendor_co/common@conflicting --max-count=1

Research to disable post-fetches because we have the "updating local tracking ref" during any Git pushing.
  After pushes Git outputs the message "updating local tracking ref <ref-name>"



Code down some Git timeouts or GNU timeout, or something, instead of the plain wait command.
  Add a fetch wait period config parameters.
  I expect my solution to work from under automaton servers such as Jenkins.
  There we can use some "kill after inactivity" features.
  But for those who runs it directly we have to prevent any hanging.
  Nobody expects any hanging.

Recreate sync repos if parameters were changed.
  Do not see enough reasons to implement this yet.
  We are solving problems here, not playing games.

if prefix_1 or prefix_2 undefined, it blocks migration of correspongind branches.
  Do not see enough reasons to implement this yet.
  Use any one line force migration command of Git.


Think about mitigation of any NFF after a long job interruption by a preliminary FF.
  Looks like it is excessive.
    Remember the time of the last sync.
    Without an analysis of predecessor refs do a FF.
    Remember if the FF was already applied.
.



